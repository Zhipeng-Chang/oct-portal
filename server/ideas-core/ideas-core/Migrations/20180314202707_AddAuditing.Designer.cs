// <auto-generated />
using CoE.Ideas.Core.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace CoE.Ideas.Core.Migrations
{
    [DbContext(typeof(InitiativeContext))]
    [Migration("20180314202707_AddAuditing")]
    partial class AddAuditing
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CoE.Ideas.Core.Data.Initiative", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AlternateKey")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("AssigneeId");

                    b.Property<string>("BusinessCaseUrl");

                    b.Property<DateTimeOffset>("CreatedDate");

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<string>("InvestmentRequestFormUrl")
                        .HasMaxLength(255);

                    b.Property<int>("Status");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("WorkOrderId");

                    b.HasKey("Id");

                    b.ToTable("Initiatives");
                });

            modelBuilder.Entity("CoE.Ideas.Core.Data.InitiativeStatusHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("InitiativeId");

                    b.Property<int?>("PersonId");

                    b.Property<int>("Status");

                    b.Property<DateTime>("StatusEntryDateUtc");

                    b.Property<string>("Text");

                    b.HasKey("Id");

                    b.ToTable("IdeaStatusHistories");
                });

            modelBuilder.Entity("CoE.Ideas.Core.Data.Stakeholder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("InitiativeId");

                    b.Property<int>("PersonId");

                    b.Property<int>("Type");

                    b.HasKey("Id");

                    b.HasIndex("InitiativeId");

                    b.ToTable("Stakeholder");
                });

            modelBuilder.Entity("CoE.Ideas.Core.Data.StringTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Category");

                    b.Property<string>("Key");

                    b.Property<string>("Text");

                    b.HasKey("Id");

                    b.ToTable("StringTemplates");
                });

            modelBuilder.Entity("CoE.Ideas.Core.Data.Initiative", b =>
                {
                    b.OwnsOne("CoE.Ideas.Shared.Data.AuditRecord", "AuditRecord", b1 =>
                        {
                            b1.Property<Guid>("InitiativeId");

                            b1.Property<string>("AuditCreatedBy")
                                .HasMaxLength(128);

                            b1.Property<DateTime>("AuditCreatedOnUtc");

                            b1.Property<string>("AuditUpdatedBy")
                                .HasMaxLength(128);

                            b1.Property<DateTime>("AuditUpdatedOnUtc");

                            b1.ToTable("Initiatives");

                            b1.HasOne("CoE.Ideas.Core.Data.Initiative")
                                .WithOne("AuditRecord")
                                .HasForeignKey("CoE.Ideas.Shared.Data.AuditRecord", "InitiativeId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });

            modelBuilder.Entity("CoE.Ideas.Core.Data.Stakeholder", b =>
                {
                    b.HasOne("CoE.Ideas.Core.Data.Initiative")
                        .WithMany("Stakeholders")
                        .HasForeignKey("InitiativeId");
                });
#pragma warning restore 612, 618
        }
    }
}
