# How to build this image:
# From the parent folder enter:
# docker image build -t coeoctava.azurecr.io/initiatives-webapi:latest -t coeoctava.azurecr.io/initiatives-webapi:stretch -f docker/Dockerfile.initiatives-server.stretch .
#
# And to push to the CoE Azure Repo (requires credentials):
# docker push coeoctava.azurecr.io/initiatives-webapi:stretch
# docker push coeoctava.azurecr.io/initiatives-webapi:latest

FROM microsoft/aspnetcore-build:2.0-stretch AS initiatives-server
ARG Configuration=Release
WORKDIR /usr/src/coe-initiatives/web
COPY server .
WORKDIR /usr/src/coe-initiatives/web/ideas-server/ideas-server
RUN dotnet publish --configuration $Configuration
WORKDIR /usr/src/coe-initiatives/web/ideas-server/ideas-server/bin/$Configuration/netcoreapp2.0


FROM node:9.10 AS initiatives-web
WORKDIR /usr/src/coe-initiatives/plugins/ideas
COPY /plugins/ideas .
RUN npm install
RUN npm rebuild node-sass # fix for running linux on Windows Docker, doesn't hurt for straight linux either
RUN npm run build -- /usr/src/coe-initiatives/plugins/ideas-build


FROM microsoft/aspnetcore:2.0-stretch
ARG Configuration=Release
WORKDIR /app
COPY --from=initiatives-server /usr/src/coe-initiatives/web/ideas-server/ideas-server/bin/$Configuration/netcoreapp2.0/publish  .
COPY --from=initiatives-web /usr/src/coe-initiatives/plugins/ideas-build/ ./wwwroot

EXPOSE 5000

# Move our run time scripts into our image
COPY ./docker/scripts/webapi-entrypoint.sh /usr/local/bin/webapi-entrypoint.sh
RUN chmod +x /usr/local/bin/webapi-entrypoint.sh

CMD /bin/bash /usr/local/bin/webapi-entrypoint.sh
